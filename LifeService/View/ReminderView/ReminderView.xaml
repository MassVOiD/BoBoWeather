<Window x:Class="LifeService.View.ReminderView.ReminderView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LifeService"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        x:Name="ReminderWindow"
        Title="ReminderWindow" WindowStyle="None"  ResizeMode="CanMinimize"
        AllowsTransparency="True" Background="Transparent" ShowInTaskbar="False"
        OpacityMask="White" WindowStartupLocation="CenterScreen" BorderThickness="24"  Height="606" Width="425" Style="{DynamicResource ResourceKey=windowOpacity}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/LifeService;component/ButtonDictionary.xaml"/>
                <ResourceDictionary Source="/LifeService;component/WindowDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding DeactivatedCommand}" CommandParameter="{Binding ElementName=ReminderWindow}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=ReminderWindow}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!--<Window.Effect>
        <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="#FF292121"/>
    </Window.Effect>-->
    <Viewbox>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <i:InvokeCommandAction Command="{Binding WindowDragCommand}" CommandParameter="{Binding ElementName=ReminderWindow}" />
            </i:EventTrigger>
            
        <!--<i:EventTrigger EventName="LostFocus">
                <i:InvokeCommandAction Command="{Binding LostFocusCommand}" CommandParameter="{Binding ElementName=MainAlarmClockWindow}" />
            </i:EventTrigger>-->
        
        </i:Interaction.Triggers>
        <Border Name="top" CornerRadius="5,5,5,5" Background="#ff0a263c" BorderBrush="#ff0a263c">
            <Border.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="0" Color="#FF292121"/>
            </Border.Effect>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding LoadedBorderCommand}" CommandParameter="{Binding ElementName=top}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid x:Name="mainGrid" Height="606" Width="425" Style="{StaticResource OpacityGridStyle}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="55"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" x:Name="headGrid">
                    <Grid>
                        <Button x:Name="addButton" Content="Button" Margin="385,0,0.333,0.333" Style="{StaticResource MainAlarmClockAddButton}" Command="{Binding AddButtonCommand}" CommandParameter="{Binding ElementName=top}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding LoadedAddButtonCommand}" CommandParameter="{Binding ElementName=addButton}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Label Content="{Binding TitleContent,UpdateSourceTrigger=PropertyChanged}" Margin="158,4,161.333,9.667" Foreground="White" FontFamily="Microsoft YaHei" FontSize="24" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                        <Image x:Name="titleImage" HorizontalAlignment="Left" VerticalAlignment="Top" Height="35" Width="209" Margin="108,10,0,0" Source="{Binding TitleIcon,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding LoadedTitleContentCommand}" CommandParameter="{Binding ElementName=titleImage}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseLeftButtonDownTitleCommand}" CommandParameter="{Binding ElementName=titleImage}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>

                        <!--<Label Content="闹钟" Margin="181,4,182.333,9.667" Foreground="White" FontFamily="Microsoft YaHei" FontSize="24"/>-->
                        <!--<Button Content="{Binding ButtonContent,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource OnlyContentButtonStyle}" Command="{Binding LoadEditDataCommand}" CommandParameter="{Binding ElementName=mainListBox}" Margin="10,12,370.333,14.667" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF0490FF" FontFamily="Microsoft YaHei" FontSize="18" />-->
                    </Grid>
                </Grid>
                <Border Grid.Row="1" CornerRadius="5,5,5,5" Background="#ff0f2d45">
                    <ListBox x:Name="mainListBox" ItemsSource="{Binding ListBoxItems,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource AniListBoxStyle}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" ManipulationBoundaryFeedback="mainListBox_ManipulationBoundaryFeedback"  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding LoadDataCommand}" CommandParameter="{Binding ElementName=mainListBox}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </Border>
            </Grid>
        </Border>
    </Viewbox>
</Window>
